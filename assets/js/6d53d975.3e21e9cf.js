"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1075],{25927:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>r,default:()=>z,frontMatter:()=>t,metadata:()=>s,toc:()=>d});var i=n(85893),o=n(11151);const t={title:"Dokumentowanie API \u2013 Cz\u0119\u015b\u0107 2: Dokumentacja referencyjna",authors:"admin",date:"2018-11-20",tags:["dobre-praktyki","przyklady","warsztat","api","narzedzia"],coverImage:"OpenAPI.png"},r=void 0,s={permalink:"/dokumentowanie-api-czesc-2-dokumentacja-referencyjna",editUrl:"https://github.com/techwriter-pl/techwriter-pl.github.io/tree/main/blog/dokumentowanie-api-czesc-2-dokumentacja-referencyjna/index.md",source:"@site/blog/dokumentowanie-api-czesc-2-dokumentacja-referencyjna/index.md",title:"Dokumentowanie API \u2013 Cz\u0119\u015b\u0107 2: Dokumentacja referencyjna",description:"Kontynuujemy temat dokumentacji API - przed Wami drugi artyku\u0142 Marcina",date:"2018-11-20T00:00:00.000Z",tags:[{label:"dobre-praktyki",permalink:"/tags/dobre-praktyki"},{label:"przyklady",permalink:"/tags/przyklady"},{label:"warsztat",permalink:"/tags/warsztat"},{label:"api",permalink:"/tags/api"},{label:"narzedzia",permalink:"/tags/narzedzia"}],readingTime:7.365,hasTruncateMarker:!0,authors:[{name:"Darek Drezno",role:"Administrator",imageURL:"/img/avatars/darek-drezno.png",key:"admin"}],frontMatter:{title:"Dokumentowanie API \u2013 Cz\u0119\u015b\u0107 2: Dokumentacja referencyjna",authors:"admin",date:"2018-11-20",tags:["dobre-praktyki","przyklady","warsztat","api","narzedzia"],coverImage:"OpenAPI.png"},unlisted:!1,prevItem:{title:"Oferta pracy: Content Writer Freelancer (Ideamotive)",permalink:"/oferta-pracy-content-writer-freelancer-ideamotive"},nextItem:{title:"Oferta pracy: Technical Writer (Synerise)",permalink:"/oferta-pracy-technical-writer-synerise"}},c={authorsImageUrls:[void 0]},d=[{value:"Na dwoje babka wr\xf3\u017cy\u0142a",id:"na-dwoje-babka-wr\xf3\u017cy\u0142a",level:3},{value:"To HAT or not to HAT?",id:"to-hat-or-not-to-hat",level:3},{value:"OpenAPI &amp; Swagger",id:"openapi--swagger",level:3}];function p(e){const a={a:"a",em:"em",h3:"h3",img:"img",p:"p",strong:"strong",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.p,{children:"Kontynuujemy temat dokumentacji API - przed Wami drugi artyku\u0142 Marcina\nPierzcha\u0142y. Tym razem skupiamy si\u0119 na cz\u0119\u015bci referencyjnej dokumentacji."}),"\n",(0,i.jsxs)(a.p,{children:[(0,i.jsx)(a.a,{href:"http://techwriter.pl/dokumentacja-api-czesc-1-definicja-i-rodzaje-api/",children:"W poprzedniej cz\u0119\u015bci cyklu om\xf3wili\u015bmy definicj\u0119 API"}),"\ni wprowadzili\u015bmy rozr\xf3\u017cnienie na API webowe i natywne. Przyjrzeli\u015bmy si\u0119 tak\u017ce\nprostemu zapytaniu HTTP, kt\xf3re wys\u0142ali\u015bmy do us\u0142ugi Google Maps, co pozwoli\u0142o\nnam wygenerowa\u0107 i zagnie\u017adzi\u0107 na stronie mapk\u0119 wskazanego obszaru. W\nprzytoczonym przyk\u0142adzie ca\u0142\u0105 robot\u0119 wykona\u0142y serwery Google. Jedyne, co\nmusieli\u015bmy zrobi\u0107, to wys\u0142a\u0107 odpowiednio skonstruowane zapytanie do w\u0142a\u015bciwego\npunktu dost\u0119powego API. Jednak aby wiedzie\u0107, jak to zrobi\u0107, musimy wpierw\nsi\u0119gn\u0105\u0107 do dokumentacji."]}),"\n",(0,i.jsx)(a.p,{children:"Dzisiaj poka\u017c\u0119 Wam, jak wygl\u0105da dokumentacja API i z jakich cz\u0119\u015bci si\u0119 sk\u0142ada.\nNast\u0119pnie przedstawi\u0119 pewne specyficzne wyzwania, jakie za sob\u0105 niesie\ndokumentowanie API, oraz om\xf3wi\u0119 narz\u0119dzia, w kt\xf3re powinien uzbroi\u0107 si\u0119\ndokumentalista, aby podo\u0142a\u0107 zadaniu."}),"\n",(0,i.jsx)(a.h3,{id:"na-dwoje-babka-wr\xf3\u017cy\u0142a",children:"Na dwoje babka wr\xf3\u017cy\u0142a"}),"\n",(0,i.jsx)(a.p,{children:"Pod poj\u0119ciem dokumentacji API w praktyce kryj\u0105 si\u0119 dwa odr\u0119bne byty \u2013\ndokumentacja koncepcyjna i dokumentacja referencyjna. Ta pierwsza t\u0142umaczy\npodstawowe poj\u0119cia potrzebne do zrozumienia, jak dzia\u0142a dany interfejs\nprogramistyczny, opisuje przebieg autentykacji i podaje proste przyk\u0142ady, dzi\u0119ki\nkt\xf3rym u\u017cytkownik mo\u017ce zacz\u0105\u0107 szybko korzysta\u0107 z API (\u201cgetting started\u201d, \u201cquick\nstart\u201d itp.). Wyja\u015bnia ona te\u017c kwestie biznesowe, takie jak ograniczenia w\ncz\u0119stotliwo\u015bci odpytywania endpoint\xf3w (\u201crate limiting\u201d) czy mo\u017cliwo\u015b\u0107 wykupienia\nkomercyjnego dost\u0119pu do API."}),"\n",(0,i.jsx)(a.p,{children:"Z kolei dokumentacja referencyjna jest niczym innym jak list\u0105 wszystkich punkt\xf3w\ndost\u0119powych wystawianych przez API wraz ze szczeg\xf3\u0142owym opisem wszystkich\nparametr\xf3w, kt\xf3re s\u0105 wymagane podczas wo\u0142ania poszczeg\xf3lnych endpoint\xf3w. Zwykle\nmo\u017cemy si\u0119 w tym miejscu natkn\u0105\u0107 tak\u017ce na przyk\u0142ady zapyta\u0144 i odpowiedzi\n(najcz\u0119\u015bciej w formatach XML i JSON). Bardziej interaktywne dokumentacje\nreferencyjne pozwol\u0105 nam nawet uzupe\u0142ni\u0107 formatk\u0119 z parametrami dowolnymi\nwarto\u015bciami i wys\u0142a\u0107 zapytanie do API bezpo\u015brednio ze strony internetowej!"}),"\n",(0,i.jsx)(a.p,{children:"Relacja mi\u0119dzy dokumentacj\u0105 referencyjn\u0105 a koncepcyjn\u0105 jest analogiczna do tej\npomi\u0119dzy s\u0142ownikiem a podr\u0119cznikiem gramatyki \u2013 si\u0119gaj\u0105c po ten pierwszy mo\u017cemy\nco prawda pozna\u0107 wszystkie s\u0142owa w danym j\u0119zyku, ale aby dowiedzie\u0107 si\u0119, jak je\nsk\u0142ada\u0107 w poprawne zdania, musimy pozna\u0107 tak\u017ce regu\u0142y gramatyczne."}),"\n",(0,i.jsx)(a.p,{children:"Skoro ju\u017c mniej wi\u0119cej wiemy, jakie rodzaje tre\u015bci mog\u0105 wyst\u0119powa\u0107 w\ndokumentacji API, przyjrzymy si\u0119 przyk\u0142adowemu wpisowi w \u201cprogramistycznym\ns\u0142owniku\u201d API Instagrama:"}),"\n",(0,i.jsxs)(a.p,{children:['[caption id="attachment_7337" align="aligncenter"\nwidth="834"]',(0,i.jsx)(a.img,{src:n(8301).Z+"",title:"Instagram API",width:"834",height:"313"})," Instagram\nAPI[/caption]"]}),"\n",(0,i.jsxs)(a.p,{children:["Powy\u017cszy przyk\u0142ad dokumentuje punkt dost\u0119powy o nazwie users/self/media/recent,\nkt\xf3ry, zgodnie z opisem, zwraca ostatnie media opublikowane przez konto, z\nkt\xf3rym jest powi\u0105zany podany ",(0,i.jsx)(a.em,{children:"access token"})," (czyli co\u015b w rodzaju klucza, kt\xf3rym\nsi\u0119 legitymujemy przed serwerem API). Poza nazw\u0105 endpointa i jego opisem,\npoznajemy tak\u017ce wspieran\u0105 metod\u0119 (GET), przyk\u0142adow\u0105 odpowied\u017a serwera (kryj\u0105c\u0105\nsi\u0119 pod przyciskiem \u201cResponse\u201d) oraz opis parametr\xf3w, kt\xf3re mog\u0105 si\u0119 znale\u017a\u0107 w\n\u0142a\u0144cuchu zapytania."]}),"\n",(0,i.jsx)(a.p,{children:"Wyobra\u017amy sobie teraz, \u017ce mamy do utrzymania dokumentacj\u0119 referencyjn\u0105 API,\nkt\xf3re sk\u0142ada si\u0119 z 50, 100 czy nawet 150 endpoint\xf3w. Ka\u017cdy z nich przyjmuje\nszereg parametr\xf3w, dla kt\xf3rych musimy okre\u015bli\u0107, czy s\u0105 one wymagane czy\nopcjonalne, a tak\u017ce gdzie powinny si\u0119 znale\u017a\u0107 (w ciele wiadomo\u015bci, w \u0142a\u0144cuchu\nzapytania czy \u015bcie\u017cce?). Je\u015bli dany parametr przesy\u0142a si\u0119 w ciele wiadomo\u015bci w\nformacie JSON, to musimy dodatkowo wskaza\u0107, jaki powinien by\u0107 jego typ danych\n(np. liczba ca\u0142kowita, liczba dziesi\u0119tna, \u0142a\u0144cuch znak\xf3w). Do tego dochodzi\nolbrzymia ilo\u015b\u0107 przyk\u0142adowych zapyta\u0144 i odpowiedzi, kt\xf3re r\xf3wnie\u017c musz\u0105 by\u0107\nzawsze aktualne. Utrzymanie takiej dokumentacji w ryzach potrafi by\u0107 nie lada\nwyzwaniem."}),"\n",(0,i.jsx)(a.h3,{id:"to-hat-or-not-to-hat",children:"To HAT or not to HAT?"}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.img,{src:n(92290).Z+"",width:"551",height:"415"})}),"\n",(0,i.jsxs)(a.p,{children:["Jak zatem podej\u015b\u0107 do utrzymania dokumentacji referencyjnej API, aby zapewni\u0107\naktualno\u015b\u0107 materia\u0142\xf3w i nie postrada\u0107 zmys\u0142\xf3w? Wielu z nas si\u0119gn\u0119\u0142o by zapewne\npo jaki\u015b sprawdzony w boju program do tworzenia dokumentacji, na przyk\u0142ad MadCap\nFlare albo co\u015b ze stajni Adobe. Nie by\u0142oby to jednak optymalne rozwi\u0105zanie.\nTypowy HAT (",(0,i.jsx)(a.em,{children:"help authoring tool"}),") sprawdzi si\u0119 \u015bwietnie podczas pisania\nkonwencjonalnej dokumentacji, takiej jak podr\u0119czniki u\u017cytkownika czy online\nhelps, lecz nie zda egzaminu w wypadku dokumentacji API. Dlaczego? Po pierwsze\nprogramy tego typu nie s\u0105 nastawione na tworzenie nowoczesnej, interaktywnej\ndokumentacji. Dla u\u017cytkownik\xf3w API mo\u017cliwo\u015b\u0107 wypr\xf3bowania funkcjonalno\u015bci\nbezpo\u015brednio z poziomu portalu z dokumentacj\u0105 jest niezwykle pomocna. Co wi\u0119cej\nHAT-y stanowi\u0105 mur mi\u0119dzy dokumentalist\u0105 a programist\u0105, poniewa\u017c zazwyczaj tylko\nten pierwszy posiada odpowiedni\u0105 licencj\u0119. Dla tych, kt\xf3rzy lubi\u0105 mie\u0107 absolutn\u0105\nkontrol\u0119 nad ka\u017cdym aspektem dokumentacji, by\u0107 mo\u017ce nie jest to wada, lecz\ntrzeba pami\u0119ta\u0107, \u017ce dokumentacja API jest wysoce techniczna i \u015bcis\u0142a wsp\xf3\u0142praca\nz ekspertami jest niezb\u0119dna."]}),"\n",(0,i.jsx)(a.p,{children:"Ostatnim, i chyba najwi\u0119kszym, niedomaganiem HAT-\xf3w w kontek\u015bcie dokumentowania\nAPI jest brak mo\u017cliwo\u015bci zbudowania dokumentacji ze \u017ar\xf3d\u0142a. Chodzi tu o\nautomatyczne jej wygenerowanie na podstawie komentarzy w kodzie b\u0105d\u017a z dokumentu\nzawieraj\u0105cego definicj\u0119 API. Gdzie w takim razie szuka\u0107 ratunku? Tutaj do akcji\nwkracza specyfikacja OpenAPI."}),"\n",(0,i.jsx)(a.h3,{id:"openapi--swagger",children:"OpenAPI & Swagger"}),"\n",(0,i.jsxs)(a.p,{children:["OpenAPI to otwarty standard umo\u017cliwiaj\u0105cy definiowanie REST-owych API. Opieraj\u0105c\nsi\u0119 na nim mo\u017cemy opisa\u0107 ca\u0142o\u015b\u0107 funkcjonalno\u015bci API w niewielkim dokumencie\ntekstowym w j\u0119zyku ",(0,i.jsx)(a.a,{href:"http://yaml.org/",children:"YAML"})," (gdzie dane strukturyzuje si\u0119 przy\npomocy wci\u0119\u0107). Przytoczony powy\u017cej przyk\u0142ad z API Instagrama mo\u017cna by w nim\nwyrazi\u0107 w nast\u0119puj\u0105cy spos\xf3b (innym dopuszczalnym formatem jest JSON, przy czym\njest on mniej popularny ze wzgl\u0119du na gorsz\u0105 czytelno\u015b\u0107):"]}),"\n",(0,i.jsx)(a.p,{children:"paths: /users/self/media/recent: get: description: Get the most recent media\npublished by the owner of the access_token. tags: - user parameters: - name:\nACCESS_TOKEN in: query description: A valid access token. schema: type: string -\nname: MIN_ID in: query description: Return media earlier than this max_id.\nschema: type: string - name: MAX_ID in: query description: Return media later\nthan this min_id. schema: type: string - name: COUNT in: query description:\nCount of media to return. schema: type: string"}),"\n",(0,i.jsx)(a.p,{children:"Tak\u0105 definicj\u0119 mo\u017cna wyci\u0105gn\u0105\u0107 albo bezpo\u015brednio z kodu przy u\u017cyciu specjalnego\ngeneratora, albo stworzy\u0107 j\u0105 r\u0119cznie. Zw\u0142aszcza ten drugi wariant niesie ze sob\u0105\ndu\u017co korzy\u015bci, szczeg\xf3lnie je\u015bli specyfikacj\u0119 opracujemy przed powstaniem API,\nponiewa\u017c ju\u017c na samym starcie ujawni ona wiele b\u0142\u0119d\xf3w i niesp\xf3jno\u015bci. Dodatkowo\nprogrami\u015bci otrzymuj\u0105 wtedy swego rodzaju kontrakt, kt\xf3rego musz\u0105 si\u0119 trzyma\u0107\npodczas rozwijania API."}),"\n",(0,i.jsxs)(a.p,{children:["Definicja zgodna ze standardem OpenAPI jest bardzo klarowna sama w sobie i, co\nwa\u017cniejsze, nadaje si\u0119 do odczytu maszynowego. Mo\u017cemy ni\u0105 \u201cnakarmi\u0107\u201d szereg\nwyspecjalizowanych narz\u0119dzi, kt\xf3re stworz\u0105 dla nas dokumentacj\u0119, pomog\u0105\nopracowa\u0107 testy, a nawet\u2026 automatycznie wygeneruj\u0105 kod wdra\u017caj\u0105cy API w wybranym\nj\u0119zyku! Oczywi\u015bcie jest to tylko szablon, kt\xf3ry trzeba ju\u017c r\u0119cznie uzupe\u0142ni\u0107 o\nzaprojektowan\u0105 funkcjonalno\u015b\u0107. Niemniej jednak jest to spora oszcz\u0119dno\u015b\u0107 czasu,\na sama idea ",(0,i.jsx)(a.em,{children:"documentation-driven development"})," jest bardzo intryguj\u0105ca."]}),"\n",(0,i.jsxs)(a.p,{children:["Wr\xf3\u0107my jednak do tematu tego wpisu. Poniewa\u017c OpenAPI jest otwartym standardem\nciesz\u0105cym si\u0119 bardzo du\u017c\u0105 popularno\u015bci\u0105, mamy do wyboru\n",(0,i.jsx)(a.a,{href:"https://github.com/OAI/OpenAPI-Specification/blob/master/IMPLEMENTATIONS.md",children:"szerok\u0105 gam\u0119"}),"\nprogram\xf3w, kt\xf3re pozwol\u0105 nam wygenerowa\u0107 dokumentacj\u0119 referencyjn\u0105 na podstawie\ndefinicji API. Honorowe miejsce w tym gronie zajmuj\u0105 narz\u0119dzia z pakietu\nSwaggera, za kt\xf3rego spraw\u0105 standard ten w og\xf3le powsta\u0142*. W\u015br\xf3d nich chyba\nnajbardziej interesuj\u0105ce z punktu widzenia dokumentacji s\u0105 dwa programy \u2013\n",(0,i.jsx)(a.strong,{children:"Swagger Editor"})," i ",(0,i.jsx)(a.strong,{children:"Swagger UI"}),". Ten pierwszy umo\u017cliwia pisanie specyfikacji\nOpenAPI bezpo\u015brednio w przegl\u0105darce, weryfikuj\u0105c w czasie rzeczywistym, czy\npisana definicja jest zgodna ze standardem. Od razu generuje te\u017c podgl\u0105d\ndokumentacji, dzi\u0119ki czemu \u0142atwiej jest dostrzec ewentualne b\u0142\u0119dy merytoryczne.\nSwagger Editor mo\u017cna sobie przetestowa\u0107 ",(0,i.jsx)(a.a,{href:"https://editor.swagger.io/",children:"tutaj"}),"."]}),"\n",(0,i.jsxs)(a.p,{children:['[caption id="attachment_7339" align="aligncenter"\nwidth="737"]',(0,i.jsx)(a.img,{src:n(52278).Z+"",width:"737",height:"423"})," Swagger Editor[/caption]"]}),"\n",(0,i.jsxs)(a.p,{children:["Gdy mamy ju\u017c gotow\u0105 definicj\u0119 OpenAPI mo\u017cemy skorzysta\u0107 ze Swagger UI, kt\xf3ry\nwygeneruje nam na jej podstawie ca\u0142kiem atrakcyjn\u0105 dokumentacj\u0119 referencyjn\u0105\n(kt\xf3ra w wersji domy\u015blnej b\u0119dzie wygl\u0105da\u0107 ",(0,i.jsx)(a.a,{href:"https://petstore.swagger.io/",children:"tak"}),").\nPowsta\u0142\u0105 w ten spos\xf3b stron\u0119 internetow\u0105 mo\u017cemy ostylowa\u0107 zgodnie z nasz\u0105\nfirmow\u0105 palet\u0105 i umie\u015bci\u0107 na dowolnym serwerze, gdzie u\u017cytkownicy b\u0119d\u0105 mogli z\nniej korzysta\u0107. Na przyk\u0142ad opisan\u0105 wcze\u015bniej definicj\u0119 punktu dost\u0119powego w API\nInstagrama Swagger UI przekszta\u0142ci\u0142by w tak\u0105 oto dokumentacj\u0119:"]}),"\n",(0,i.jsxs)(a.p,{children:['[caption id="attachment_7340" align="aligncenter"\nwidth="611"]',(0,i.jsx)(a.img,{src:n(35291).Z+"",width:"611",height:"522"})," Swagger UI[/caption]"]}),"\n",(0,i.jsx)(a.p,{children:"Z punktu widzenia odbiorcy dokumentacja referencyjna wygenerowana przy u\u017cyciu\nnarz\u0119dzi Swaggera jest bardzo przejrzysta. Dodatkow\u0105 zalet\u0119 stanowi mo\u017cliwo\u015b\u0107\nwypr\xf3bowania zapyta\u0144 bezpo\u015brednio w dokumentacji. Swagger prezentuje si\u0119 bardzo\ndobrze r\xf3wnie\u017c od kuchni, cho\u0107 wymaga nieco technicznej wiedzy. Je\u015bli jednak\ndysponujemy dobrze napisan\u0105 lub wygenerowan\u0105 automatycznie z kodu definicj\u0105\nOpenAPI, aktualizowanie dokumentacji referencyjnej b\u0119dzie czyst\u0105 przyjemno\u015bci\u0105."}),"\n",(0,i.jsxs)(a.p,{children:["Zarzutem cz\u0119sto wysuwanym pod adresem Swaggera jest to, \u017ce generowana przez\nniego dokumentacja wygl\u0105da nieco archaicznie. No i faktycznie \u2013 wystarczy\nspojrze\u0107 na dokumentacj\u0119\n",(0,i.jsx)(a.a,{href:"https://developer.spotify.com/documentation/web-api/reference/albums/get-album/",children:"Spotify"}),"\nczy ",(0,i.jsx)(a.a,{href:"https://developers.trello.com/v1.0/reference",children:"Trello"}),", \u017ceby si\u0119 przekona\u0107,\n\u017ce mo\u017ce by\u0107 du\u017co lepiej. Ponadto Swagger nie daje mo\u017cliwo\u015bci zintegrowania\ndokumentacji referencyjnej z koncepcyjn\u0105, kt\xf3r\u0105 musimy pisa\u0107 osobno i jako\u015b\n\u201cdokleja\u0107\u201d do cz\u0119\u015bci wygenerowanej przez Swaggera. Na szcz\u0119\u015bcie narz\u0119dzi\nwspieraj\u0105cych standard OpenAPI nie brakuje, dzi\u0119ki czemu ka\u017cdy powinien znale\u017a\u0107\nrozwi\u0105zanie na miar\u0119 swoich potrzeb. Ciekawymi propozycjami s\u0105 np.\n",(0,i.jsx)(a.a,{href:"https://readme.io/",children:"readme.io"})," i ",(0,i.jsx)(a.a,{href:"https://stoplight.io/",children:"Stoplight"}),", kt\xf3re\nk\u0142ad\u0105 nacisk na prac\u0119 w chmurze. Warto te\u017c wspomnie\u0107, \u017ce obok OpenAPI r\xf3wnolegle\nistniej\u0105 te\u017c dwa inne, nieco mniej popularne standardy opisu REST-owych API \xa0\u2013\nRAML i API Blueprint, kt\xf3re otwieraj\u0105 drzwi do kolejnych specjalistycznych\nnarz\u0119dzi."]}),"\n",(0,i.jsx)(a.p,{children:"Dzisiejszy wpis wyszed\u0142 d\u0142u\u017cszy ni\u017c si\u0119 spodziewa\u0142em, ale dokumentowanie API to\nrozleg\u0142y temat. Skupili\u015bmy si\u0119 na dokumentacji referencyjnej, kt\xf3ra obok\nmateria\u0142\xf3w koncepcyjnych stanowi trzon ka\u017cdej dokumentacji REST-owego API.\nNast\u0119pnie wkroczyli\u015bmy w \u015bwiat standardu OpenAPI i narz\u0119dzi Swaggera, kt\xf3re\noferuj\u0105 bardzo wygodny spos\xf3b na tworzenie dokumentacji referencyjnej. W\nkolejnej cz\u0119\u015bci cyklu we\u017amiemy na warsztat dokumentacj\u0119 koncepcyjn\u0105, przyjrzymy\nsi\u0119 narz\u0119dziom, kt\xf3re mo\u017cemy zastosowa\u0107 podczas jej pisania, a na koniec om\xf3wimy\nmo\u017cliwo\u015bci publikacji kompletnej dokumentacji API."}),"\n",(0,i.jsx)(a.p,{children:"*W 2015 roku firma SmartBear Software, do kt\xf3rej nale\u017cy Swagger, powo\u0142a\u0142a do\n\u017cycia OpenAPI Initiative, kt\xf3ra to obj\u0119\u0142a piecz\u0119 nad specyfikacj\u0105 OpenAPI\n(dawnej funkcjonuj\u0105c\u0105 pod nazw\u0105 Swagger Specification) jako otwartym standardem,\nkt\xf3ry mia\u0142 by\u0107 od tej pory rozwijany przy wsp\xf3\u0142pracy wielu firm w ramach Linux\nFoundation."})]})}function z(e={}){const{wrapper:a}={...(0,o.a)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},92290:(e,a,n)=>{n.d(a,{Z:()=>i});const i=n.p+"assets/images/Hat-efaf04ffe165105abc02e50242addc29.jpeg"},8301:(e,a,n)=>{n.d(a,{Z:()=>i});const i=n.p+"assets/images/InstagramApi-013acec0c80ba6a4963a5a9a70a48665.jpeg"},52278:(e,a,n)=>{n.d(a,{Z:()=>i});const i=n.p+"assets/images/SwaggerEditor-2adb3a2556f5137ac7b74cd443bcd205.jpeg"},35291:(e,a,n)=>{n.d(a,{Z:()=>i});const i=n.p+"assets/images/SwaggerUI-dff74e8253b5161f84b0989f1ad7a58d.jpeg"},11151:(e,a,n)=>{n.d(a,{Z:()=>s,a:()=>r});var i=n(67294);const o={},t=i.createContext(o);function r(e){const a=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function s(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(t.Provider,{value:a},e.children)}}}]);